services:
  db:
    image: postgres:${POSTGRES_IMG_VERSION}
    container_name: ${PROJECT_NAME}_db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - odoo-db:/var/lib/postgresql/data/pgdata
    networks:
      - clodofy
  odoo:
    container_name: ${PROJECT_NAME}
    build:
        context: .
        dockerfile: ./.resources/Dockerfile
    depends_on:
      - db
    ports:
      - "${PORT_SERVICE_HOST_ODOO}:${PORT_SERVICE_CONTAINER_ODOO}"
      - "${PORT_SERVICE_HOST_ODOO_XMLRPC}:${PORT_SERVICE_CONTAINER_ODOO_XMLRPC}"
    volumes:
      - ./.resources:/home/odoo/.resources
      - ./src:/home/odoo/src
      - odoo-web:/var/lib/odoo
      - odoo_data:/home/odoo/data
    environment:
      CUSTOM_CONFIG: |-
        [options]
      CUSTOM_REQUIREMTNS: |-
        # custom pip librearies
      CUSTOM_ENTRYPOINT: |-
        #!/bin/bash
        # pip install --user --no-cache-dir -e /home/odoo/custom/odoo
        # pip install --user --no-cache-dir pyopenssl
        #
      PGHOST: db
      PGPORT: 5432
      DBFILTER: ${DBFILTER}
      ODOO_SERVER: ${ODOO_SERVER}
      PGPASSWORD: ${PGPASSWORD}
      PGUSER: ${PGUSER}
      UNACCENT: ${UNACCENT}
      WAIT_PG: ${WAIT_PG}
      SERVER_WIDE_MODULES: ${SERVER_WIDE_MODULES}
      MAX_CRON_THREADS: ${MAX_CRON_THREADS}
      WORKERS: ${WORKERS}
      LIST_DB: ${LIST_DB}
      WITHOUT_DEMO: ${WITHOUT_DEMO}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      PROXY_MODE: ${PROXY_MODE}
      SERVER_MODE: ${SERVER_MODE}
      LIMIT_TIME_REAL_CRON: ${LIMIT_TIME_REAL_CRON}
      LIMIT_TIME_REAL: ${LIMIT_TIME_REAL}
      LOG_LEVEL: info
      CUSTOM_ENABLED: ${CUSTOM_ENABLED}
    networks:
      clodofy:

volumes:
  odoo-web:
  odoo-db:
  odoo_data:

networks:
  clodofy:
    external: false
    name: odoo-${ODOO_VERSION}
